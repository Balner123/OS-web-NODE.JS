[
  {
    "id": 2,
    "time": "2024-09-10T16:30:59.160Z",
    "text": "const express = require('express');\nconst fs = require('fs');\nconst path = require('path');\n\nconst app = express();\nconst PORT = 3000;\n\napp.use(express.json());\napp.use(express.urlencoded({ extended: true }));\n\napp.use(express.static(path.join(__dirname, 'public')));\n\nconst getNextId = (posts) => {\n    const maxId = posts.reduce((max, post) => Math.max(max, post.id), 0);\n    return maxId + 1;\n};\n\napp.get('/posts', (req, res) => {\n    fs.readFile(path.join(__dirname, 'prispevky.json'), 'utf8', (err, data) => {\n        if (err) {\n            console.error(err);\n            return res.status(500).send('Error reading posts');\n        }\n        res.json(JSON.parse(data));\n    });\n});\n\napp.post('/posts', (req, res) => {\n    const newPost = {\n        id: null,  // ID bude generováno později\n        time: new Date().toISOString(),\n        text: req.body.text\n    };\n\n    fs.readFile(path.join(__dirname, 'prispevky.json'), 'utf8', (err, data) => {\n        let posts = [];\n        if (!err && data) {\n            posts = JSON.parse(data);\n        }\n        newPost.id = getNextId(posts);\n        posts.push(newPost);\n\n        fs.writeFile(path.join(__dirname, 'prispevky.json'), JSON.stringify(posts, null, 2), 'utf8', (err) => {\n            if (err) {\n                console.error(err);\n                return res.status(500).send('Error saving post');\n            }\n            res.status(201).send('Post saved');\n        });\n    });\n});\n\napp.delete('/posts/:id', (req, res) => {\n    const postId = parseInt(req.params.id, 10);\n\n    fs.readFile(path.join(__dirname, 'prispevky.json'), 'utf8', (err, data) => {\n        if (err) {\n            console.error(err);\n            return res.status(500).send('Error reading posts');\n        }\n\n        let posts = JSON.parse(data);\n        posts = posts.filter(post => post.id !== postId);\n\n        fs.writeFile(path.join(__dirname, 'prispevky.json'), JSON.stringify(posts, null, 2), 'utf8', (err) => {\n            if (err) {\n                console.error(err);\n                return res.status(500).send('Error deleting post');\n            }\n            res.status(200).send('Post deleted');\n        });\n    });\n});\n\napp.get('/about', (req, res) => {\n    res.sendFile(path.join(__dirname, 'public', 'about.html'));\n});\n\napp.listen(PORT, () => {\n    console.log(`Server is running on http://localhost:${PORT}`);\n});"
  },
  {
    "id": 3,
    "time": "2024-09-10T16:31:12.279Z",
    "text": "const express = require('express');\nconst fs = require('fs');\nconst path = require('path');\n\nconst app = express();\nconst PORT = 3000;\n\napp.use(express.json());\napp.use(express.urlencoded({ extended: true }));\n\napp.use(express.static(path.join(__dirname, 'public')));\n\nconst getNextId = (posts) => {\n    const maxId = posts.reduce((max, post) => Math.max(max, post.id), 0);\n    return maxId + 1;\n};\n\napp.get('/posts', (req, res) => {\n    fs.readFile(path.join(__dirname, 'prispevky.json'), 'utf8', (err, data) => {\n        if (err) {\n            console.error(err);\n            return res.status(500).send('Error reading posts');\n        }\n        res.json(JSON.parse(data));\n    });\n});\n\napp.post('/posts', (req, res) => {\n    const newPost = {\n        id: null,  // ID bude generováno později\n        time: new Date().toISOString(),\n        text: req.body.text\n    };\n\n    fs.readFile(path.join(__dirname, 'prispevky.json'), 'utf8', (err, data) => {\n        let posts = [];\n        if (!err && data) {\n            posts = JSON.parse(data);\n        }\n        newPost.id = getNextId(posts);\n        posts.push(newPost);\n\n        fs.writeFile(path.join(__dirname, 'prispevky.json'), JSON.stringify(posts, null, 2), 'utf8', (err) => {\n            if (err) {\n                console.error(err);\n                return res.status(500).send('Error saving post');\n            }\n            res.status(201).send('Post saved');\n        });\n    });\n});\n\napp.delete('/posts/:id', (req, res) => {\n    const postId = parseInt(req.params.id, 10);\n\n    fs.readFile(path.join(__dirname, 'prispevky.json'), 'utf8', (err, data) => {\n        if (err) {\n            console.error(err);\n            return res.status(500).send('Error reading posts');\n        }\n\n        let posts = JSON.parse(data);\n        posts = posts.filter(post => post.id !== postId);\n\n        fs.writeFile(path.join(__dirname, 'prispevky.json'), JSON.stringify(posts, null, 2), 'utf8', (err) => {\n            if (err) {\n                console.error(err);\n                return res.status(500).send('Error deleting post');\n            }\n            res.status(200).send('Post deleted');\n        });\n    });\n});\n\napp.get('/about', (req, res) => {\n    res.sendFile(path.join(__dirname, 'public', 'about.html'));\n});\n\napp.listen(PORT, () => {\n    console.log(`Server is running on http://localhost:${PORT}`);\n});"
  }
]